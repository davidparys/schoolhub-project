name: Release & Deploy

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

env:
  NODE_VERSION: '20'

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    outputs:
      version: ${{ steps.version.outputs.version }}
      release-created: ${{ steps.release.outputs.release_created }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create Release
        uses: google-github-actions/release-please-action@v4
        id: release
        with:
          release-type: node
          package-name: schoolhub-david-parys

      - name: Get version
        id: version
        run: echo "version=${{ steps.release.outputs.tag_name }}" >> $GITHUB_OUTPUT

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: create-release
    if: |
      always() && 
      (needs.create-release.outputs.release-created == 'true' || 
       github.event.inputs.environment == 'staging' ||
       github.event_name == 'push')
    environment:
      name: staging
      url: ${{ steps.deploy.outputs.url }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build application
        run: yarn build
        env:
          NODE_ENV: production

      - name: Deploy to Netlify (Staging)
        id: deploy
        uses: nwtgck/actions-netlify@v3.0
        with:
          publish-dir: './dist/spa'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy staging v${{ needs.create-release.outputs.version || github.sha }}"
          production-deploy: false
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_STAGING_SITE_ID }}

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [create-release, deploy-staging]
    if: |
      needs.create-release.outputs.release-created == 'true' || 
      github.event.inputs.environment == 'production'
    environment:
      name: production
      url: ${{ steps.deploy.outputs.url }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build application
        run: yarn build
        env:
          NODE_ENV: production

      - name: Deploy to Netlify (Production)
        id: deploy
        uses: nwtgck/actions-netlify@v3.0
        with:
          publish-dir: './dist/spa'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy production v${{ needs.create-release.outputs.version || github.sha }}"
          production-deploy: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

      - name: Notify Slack
        if: success()
        uses: 8398a7/action-slack@v3
        with:
          status: success
          text: "ðŸš€ Successfully deployed v${{ needs.create-release.outputs.version || github.sha }} to production!"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
